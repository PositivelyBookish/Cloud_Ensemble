server {
    listen 8081;
    server_name localhost;
    # Root folder for serving static files like HTML, CSS, and JS
    root /var/www/html;
    index index.html;

    # Serve static files for the web app
    location / {
        try_files $uri $uri/ =404;
    }

    # Proxy API requests to the Go backend
   
    location /classify {
    proxy_pass http://localhost:8082;  # Forward API requests to your Go server
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    # Increase timeout for slow connections (uploading large images, etc.)
    proxy_read_timeout 300s;
    proxy_send_timeout 300s;

    # Increase buffer sizes for larger requests
    client_max_body_size 50M;  # Increase body size limit to 50MB (adjust as needed)
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Handle CORS headers (if needed for cross-origin requests)
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
    add_header Access-Control-Allow-Headers 'Content-Type, Authorization';

    # Handle OPTIONS requests (for CORS preflight)
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
        return 204;
    }
}

    # Error handling (optional)
    error_page 404 /404.html;
    location = /404.html {
        root /var/www/html;
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/html;
        internal;
    }
}